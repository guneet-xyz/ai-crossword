name: Push on main branch
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22.18.0

      - name: Install dependencies
        run: npm ci

      - name: Lint Website
        run: npm run lint

      - name: Typecheck
        run: npm run typecheck

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22.18.0

      - name: Install dependencies
        run: npm ci

      - name: Build Website
        run: npm run build

  formatting:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22.18.0

      - name: Install dependencies
        run: npm ci

      - name: Check Formatting
        run: npm run format:check

  docker-push:
    name: Build Docker Image and Push
    environment: self-hosted-deployment
    runs-on: ubuntu-latest
    needs:
      - lint
      - build
      - formatting
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: build
        run: docker build -t ${{ secrets.DOCKER_REGISTRY }}/mon/website:latest -f apps/website/Dockerfile .

      - name: setup tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
      - name: docker login
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: push
        run: docker push ${{ secrets.DOCKER_REGISTRY }}/mon/website:latest

  deploy:
    environment: self-hosted-deployment
    runs-on: ubuntu-latest
    needs:
      - docker-push
    concurrency:
      group: deploy
      cancel-in-progress: false
    steps:
      - name: setup tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
      - name: setup ssh
        run: |
          mkdir -p ~/.ssh
          echo '${{ secrets.SSH_PRIVATE_KEY }}' > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
      - name: deploy
        run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '${{ secrets.SSH_COMMAND }}'
